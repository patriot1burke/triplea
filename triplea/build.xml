<?xml version="1.0"?>


<project name="TripleA" basedir="." default="compile">

	<property file=".ant.properties" />

	<path id="full.path">
		<pathelement path="lib\junit.jar" />
		<pathelement path="lib\standalone-compiler.jar" />
		<pathelement path="lib\looks-2.0.4.jar" />
		<pathelement path="lib\MRJToolkitStubs.zip" />
		<pathelement path="lib\commons-httpclient-3.0.1.jar" />
		<pathelement path="lib\commons-logging-1.1.jar" />
		<pathelement path="lib\commons-codec-1.3.jar" />
		<pathelement path="${classpath}" />
		<pathelement path="classes/" />
	</path>


	<!-- init -->
	<target name="init">
	</target>


	<!-- All -->
	<target name="all" depends="init,clean,compile,test,zip, zipSource">
	</target>


	<!-- Clean -->
	<target name="clean" depends="init" description="Remove all release, class and saved game files">
		<delete dir="release" />
		<delete dir="classes" />
		<delete dir="savedGames" />
		<delete dir="TripleA.app" />
	</target>

	<!-- Compile -->
	<target name="compile" depends="init" description="Compile the source files and copy over the resource files">

		<!-- we require jdk 1.5 or greater -->
		<fail message="jdk 1.5 or greater required, you are currently using: ${ant.java.version}">
			<condition>
				<or>
					<equals arg1="1.1" arg2="${ant.java.version}" />
					<equals arg1="1.2" arg2="${ant.java.version}" />
					<equals arg1="1.3" arg2="${ant.java.version}" />
					<equals arg1="1.4" arg2="${ant.java.version}" />
				</or>
			</condition>
		</fail>

		<!-- we only need this for deployment -->
		<delete file="bin/triplea.jar" />

		<mkdir dir="classes" />
		<copy todir="classes">
			<fileset dir="data">
				<include name="**/*.dtd" />
				<include name="**/*.gif" />
				<include name="**/*.png" />
				<include name="**/*.txt" />
				<include name="**/*.jpeg" />
				<include name="**/*.xml" />
				<include name="**/*.wav" />
				<include name="**/*.properties" />
			</fileset>
		</copy>

		<javac srcdir="src/" destdir="classes/" debug="true" deprecation="true" classpathref="full.path" target="1.5" />

		<!-- to check the correct java version, we need to compile the startup class so that it will run on older vms -->
		<!-- delete the startup class, and recompile it -->

		<delete>
			<fileset dir="classes" includes="**/GameRunner.class">
			</fileset>
		</delete>

		<javac srcdir="src/" destdir="classes/" debug="true" deprecation="true" classpathref="full.path" target="1.2" source="1.2" />

	</target>


	<!-- compileClean -->
	<target name="compileClean" depends="clean,compile" description="Clean then compile" />

	<target name="macRelease" depends="init,compile" description="create a mac os x application">
		<delete dir="TripleA.app" />
		<delete>
			<fileset dir="." includes="*.dmg" />
		</delete>

		<exec executable="hdiutil">
			<arg line="detach /Volumes/TripleA" />
		</exec>

		<mkdir dir="TripleA.app" />
		<mkdir dir="TripleA.app/Contents" />
		<mkdir dir="TripleA.app/Contents/MacOS" />
		<mkdir dir="TripleA.app/Contents/Resources/" />
		<mkdir dir="TripleA.app/Contents/Resources/Java" />

		<copy file="/System/Library/Frameworks/JavaVM.framework/Versions/Current/Resources/MacOS/JavaApplicationStub" todir="TripleA.app/Contents/MacOS/" />

		<exec executable="chmod">
			<arg line="755 TripleA.app/Contents/MacOS/JavaApplicationStub" />
		</exec>

		<jar destfile="TripleA.app/Contents/Resources/Java/triplea.jar" basedir="classes">
			<manifest>
				<attribute name="Main-Class" value="games.strategy.engine.framework.GameRunner" />
				<attribute name="Class-Path" value="./looks-2.0.4.jar" />
			</manifest>
		</jar>

		<copy file="Info.plist" todir="TripleA.app/Contents/" />

		<echo message="APPL????" file="TripleA.app/Contents/PkgInfo" />

		<copy file="lib/looks-2.0.4.jar" todir="TripleA.app/Contents/Resources/Java/" />

		<copy file="icons/icon.icns" todir="TripleA.app/Contents/Resources/" />

		<exec executable="cp">
			<arg line="-r games TripleA.app/Contents/Resources/" />
		</exec>

		<exec executable="cp">
			<arg line="-r icons TripleA.app/Contents/Resources/" />
		</exec>

		<exec executable="cp">
			<arg line="-r images TripleA.app/Contents/Resources/" />
		</exec>

		<exec executable="cp">
			<arg line="-r license TripleA.app/Contents/Resources/" />
		</exec>

		<exec executable="cp">
			<arg line="-r maps TripleA.app/Contents/Resources/" />
		</exec>

		<exec executable="/Developer/Tools/SetFile">
			<arg line="-a B TripleA.app" />
		</exec>

		<unzip src="icons/Icon.zip" dest="TripleA.app/" encoding="MacRoman" />

		<exec executable="hdiutil">
			<arg line="create -size 20m -fs HFS+ -volname TripleA triplea_${triplea.version}_mac.dmg" />
		</exec>

		<exec executable="hdiutil">
			<arg line="attach triplea_${triplea.version}_mac.dmg" />
		</exec>

		<exec executable="cp">
			<arg line="-r TripleA.app /Volumes/TripleA/" />
		</exec>

		<exec executable="cp">
			<arg line="-r doc /Volumes/TripleA/" />
		</exec>

		<exec executable="cp">
			<arg line="readme.html /Volumes/TripleA/" />
		</exec>

		<exec executable="cp">
			<arg line="license/gpl.txt /Volumes/TripleA/COPYING" />
		</exec>

		<exec executable="hdiutil">
			<arg line="detach /Volumes/TripleA" />
		</exec>

	</target>

	<!-- zip -->
	<target name="zip" depends="init,compile" description="create a zip file for end users">
		<mkdir dir="release" />

		<delete file="bin/triplea.jar" />
		
		<!-- we want to merge all the jar files we use
		     into the triplea.jar file, so unzip everything into
		     one directory -->
		<delete dir="deleteme"></delete>
		<mkdir dir="deleteme"/>
		<unjar dest="deleteme" overwrite="yes"> 
			<fileset dir="lib" includes="*.jar" excludes="junit.jar,derby*"> </fileset>
		</unjar>
		<delete dir="deleteme/META-INF"/>
		<copy todir="deleteme">
			<fileset dir="classes" includes="**"></fileset>
		</copy>
		
		<jar destfile="bin/triplea.jar" basedir="deleteme">
			<manifest>
				<attribute name="Main-Class" value="games.strategy.engine.framework.GameRunner" />
			</manifest>
		</jar>
		<delete dir="deleteme"></delete>

		<zip zipfile="release/triplea_${triplea.version}_all_platforms.zip" compress="true">

			<!--zipfileset dir="lib/" prefix="triplea_${triplea.version}/lib/">
				<include name="**/*.jar" />
				<include name="**/*.zip" />

				<exclude name="**/junit.jar" />
			</zipfileset -->

			<zipfileset dir="doc/" prefix="triplea_${triplea.version}/doc/">
				<include name="**/*.html" />
				<include name="**/*.png" />
				<include name="**/*.gif" />
				<include name="**/*.jpg" />
			</zipfileset>

			<zipfileset dir="license/" prefix="triplea_${triplea.version}/license/">
				<include name="gpl.txt" />
			</zipfileset>

			<zipfileset dir="icons/" prefix="triplea_${triplea.version}/icons/">
				<include name="**/*.png" />
				<include name="**/*.bmp" />
				<include name="**/*.ico" />
			</zipfileset>

			<zipfileset dir="games/" prefix="triplea_${triplea.version}/games/">
				<include name="*.xml" />
			</zipfileset>

			<zipfileset dir="images/" prefix="triplea_${triplea.version}/images/">
				<include name="**/*.*" />
			</zipfileset>

			<zipfileset dir="maps/" prefix="triplea_${triplea.version}/maps/">
				<include name="**/*.*" />
			</zipfileset>

			<zipfileset dir="." prefix="triplea_${triplea.version}/">
				<include name="readme.html" />
				<include name="*.bat" />
				<include name="triplea.exe" />
				<include name="changelog.txt" />
			</zipfileset>

			<zipfileset dir="." prefix="triplea_${triplea.version}/" filemode="755">
				<include name="*.sh"/>
				<exclude name="fix_mac_icon.sh"/>
			</zipfileset>
			
			<zipfileset dir="bin/" prefix="triplea_${triplea.version}/bin/" filemode="755">
				<include name="**/triplea.jar" />
			</zipfileset>

			
		</zip>
	</target>

	<!-- must be done after a ant zip has been executed (we dont depend since ant zip 
         takes a while.  NSIS must be installed, and makensis must be on the path
	 -->
	<target name="zipInstallerWithJava" depends="init" description="prepare_installer">
		<delete dir="release/installer" />
		<mkdir dir="release/installer" />

		<unzip src="release/triplea_${triplea.version}_all_platforms.zip" dest="release/installer" />
		<unzip src="installer/jre1.5.0_06.zip" dest="release/installer" />
		<move toDir="release/installer/triplea_${triplea.version}/jre">
			<fileset dir="release/installer/jre1.5.0_06" />
		</move>

		<copy file="installer/installer.nsi" toFile="release/installer/installer.nsi" />
		<copy file="triplea_embeded_jre.exe" toFile="release/installer/triplea_${triplea.version}/triplea.exe" overwrite="true" />
		<!-- the bat file doesnt work, since it does not point to the jre -->
		<delete file="release/installer/triplea_${triplea.version}/triplea_windows.bat" />


		<exec executable="makensis" dir="release/installer">
			<arg line="/Dversion=${triplea.version} installer.nsi " />
		</exec>

		<move file="release/installer/triplea_installer.exe" toFile="release/triplea_${triplea.version}_windows_installer_with_java.exe" />
	</target>


	<target name="release" depends="clean,compile,zip,zipInstaller,zipInstallerWithJava,zipSource" />

	<!-- must be done after a ant zip has been executed (we dont depend since ant zip 
         takes a while.  NSIS must be installed, and makensis must be on the path
	 -->
	<target name="zipInstaller" depends="init" description="prepare_installer">
		<delete dir="release/installer" />
		<mkdir dir="release/installer" />

		<unzip src="release/triplea_${triplea.version}_all_platforms.zip" dest="release/installer" />

		<copy file="installer/installer.nsi" toFile="release/installer/installer.nsi" />

		<exec executable="makensis" dir="release/installer">
			<arg line="/Dversion=${triplea.version} installer.nsi " />
		</exec>

		<move file="release/installer/triplea_installer.exe" toFile="release/triplea_${triplea.version}_windows_installer.exe" />


	</target>

	<!-- zipSource -->
	<target name="zipSource" depends="init" description="create a zip file for developers">
		<mkdir dir="release" />

		<zip zipfile="release/triplea_${triplea.version}_source_code_only.zip" compress="true">

			<zipfileset dir="src/" prefix="triplea_${triplea.version}/src/">
				<include name="**/*.java" />
			</zipfileset>

			<zipfileset dir="junit/" prefix="triplea_${triplea.version}/junit/">
				<include name="excluded.properties" />
			</zipfileset>

			<zipfileset dir="lib/" prefix="triplea_${triplea.version}/lib/">
				<include name="**/*.jar" />
				<include name="**/*.zip" />
			</zipfileset>

			<zipfileset dir="data/" prefix="triplea_${triplea.version}/data/">
				<include name="**/*.dtd" />
				<include name="**/*.gif" />
				<include name="**/*.png" />
				<include name="**/*.jpg" />
				<include name="**/*.jpeg" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.wav" />
				<include name="**/*.properties" />
			</zipfileset>

			<zipfileset dir="bin/" prefix="triplea_${triplea.version}/bin/">
				<include name="**/*.bat" />
				<include name="**/*.sh" />
			</zipfileset>

			<zipfileset dir="." prefix="triplea_${triplea.version}/">
				<include name="build.xml" />
				<include name=".ant.properties" />
				<include name="readme.html" />
				<include name="*.bat" />
				<include name="*.sh" />
				<include name="changelog.txt" />
				<include name="launch4j.config.xml" />
			</zipfileset>

			<zipfileset dir="icons/" prefix="triplea_${triplea.version}/icons/">
				<include name="**/*.png" />
				<include name="**/*.bmp" />
				<include name="**/*.ico" />
			</zipfileset>

			<zipfileset dir="doc/" prefix="triplea_${triplea.version}/doc/">
				<include name="**/*.html" />
				<include name="**/*.png" />
				<include name="**/*.gif" />
				<include name="**/*.jpg" />
			</zipfileset>

			<zipfileset dir="license/" prefix="triplea_${triplea.version}/license/">
				<include name="gpl.txt" />
			</zipfileset>

			<zipfileset dir="images/" prefix="triplea_${triplea.version}/images/">
				<include name="**/*.*" />
			</zipfileset>

			<zipfileset dir="maps/" prefix="triplea_${triplea.version}/maps/">
				<include name="**/*.*" />
			</zipfileset>

			<zipfileset dir="games/" prefix="triplea_${triplea.version}/games/">
				<include name="*.xml" />
			</zipfileset>

		</zip>
	</target>


	<!-- patch -->
	<!--
    	PBEM patch
    -->
	<target name="patch" depends="compile">
		<jar destfile="patch.jar" basedir="classes">
			<include name="games/strategy/**/*.class" />
			<exclude name="**/GameRunner*.class" />
			<exclude name="**/xml/**/*.class" />
		</jar>
	</target>


	<!-- javadoc -->
	<target name="javadoc" depends="init" description="Generate JavaDoc documentation">
		<delete dir="apidoc" />

		<mkdir dir="apidoc" />

		<javadoc destdir="apidoc" Verbose="off">
			<package name="games.strategy.*" />
			<sourcepath>
				<pathelement location="src/" />
			</sourcepath>
		</javadoc>
	</target>


	<!-- test -->
	<target name="test" depends="init,compile" description="run junit tests">
		<junit fork="yes" haltonerror="on">
			<classpath>
				<pathelement path="${junit.jar}" />
				<pathelement path="${classpath}" />
				<pathelement path="classes/" />
			</classpath>

			<formatter type="plain" />
			<test name="games.strategy.triplea.TripleATest" />
			<test name="games.strategy.StrategyGameTest" />
		</junit>
	</target>

</project>
