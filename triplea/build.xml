<?xml version="1.0"?>


<project name="TripleA" basedir="." default="compile">

	<property file=".ant.properties"/>
	
    <path id="full.path">
        <pathelement path="lib\junit.jar"/>
        <pathelement path="lib\standalone-compiler.jar"/>
        <pathelement path="lib\looks-1.3.1.jar"/>
        <pathelement path="lib\backport-util-concurrent.jar"/>
        <pathelement path="${classpath}"/>
        <pathelement path="classes/"/>
    </path>


    <!-- init -->
    <target name="init">
    </target>


    <!-- All -->
    <target name="all" depends="init,clean,compile,test,zip, zipSource,installer">
    </target>


    <!-- Clean -->
    <target name="clean" depends="init" description="Remove all release, class and saved game files">
        <delete dir="release"/>
        <delete dir="classes"/>
        <delete dir="savedGames"/>
    </target>

    <!-- Compile -->
    <target name="compile" depends="init" description="Compile the source files and copy over the resource files">

	    <!-- we require jdk 1.5 or greater -->
    	<fail message="jdk 1.5 or greater required, you are currently using: ${ant.java.version}">
        	<condition>
        		<or>
        			<equals arg1="1.1" arg2="${ant.java.version}"/>
        			<equals arg1="1.2" arg2="${ant.java.version}"/>
        			<equals arg1="1.3" arg2="${ant.java.version}"/>
        			<equals arg1="1.4" arg2="${ant.java.version}"/>
        		</or>
        	</condition>    	
    	</fail>

	<!-- we only need this for deployment -->	
	<delete file="bin/triplea.jar"/>
    	
        <mkdir dir="classes"/>
        <copy todir="classes">
            <fileset dir="data">
                <include name="**/*.dtd"/>
                <include name="**/*.gif"/>
                <include name="**/*.png"/>
                <include name="**/*.txt"/>
                <include name="**/*.jpeg"/>
                <include name="**/*.xml"/>
                <include name="**/*.wav"/>
		<include name="**/*.properties"/>
            </fileset>
        </copy>
    		
        <javac srcdir="src/"
            destdir="classes/"
            debug="true"
            deprecation="true"
            classpathref="full.path"
        	target="1.5"
        />

    	<!-- to check the correct java version, we need to compile the startup class so that it will run on older vms -->
    	<!-- delete the startup class, and recompile it -->

    	<delete> <fileset dir="classes" includes="**/GameRunner.class"> </fileset></delete>
    	
        <javac srcdir="src/"
            destdir="classes/"
            debug="true"
            deprecation="true"
            classpathref="full.path"
          	target="1.2"
        	source="1.2"
       />
    	
    </target>

  
    <!-- compileClean -->
    <target name="compileClean" depends="clean,compile" description="Clean then compile"/>


    <!-- zip -->
    <target name="zip" depends="init,compile" description="create a zip file for end users">
        <mkdir dir="release" />

	<delete file="bin/triplea.jar"/>
	<jar destfile="bin/triplea.jar" basedir="classes">
		<manifest>
			<attribute name="Main-Class" value="games.strategy.engine.framework.GameRunner"/>
			<attribute name="Class-Path" value="../lib/looks-1.3.1.jar"/>
		</manifest>
	</jar>
	
	<zip zipfile="release/triplea_${triplea.version}.zip" compress="true" >

        <zipfileset dir="lib/" prefix="triplea_${triplea.version}/lib/">
            <include name="**/*.jar"/>
        	<!-- we dont need junit in the release -->
        	<exclude name="**/junit.jar" />
        </zipfileset>
      
        <zipfileset dir="doc/" prefix="triplea_${triplea.version}/doc/">
            <include name="**/*.html"/>
            <include name="**/*.png"/>
	    <include name="**/*.gif"/>
	    <include name="**/*.jpg"/>
        </zipfileset>
      
        <zipfileset dir="license/" prefix="triplea_${triplea.version}/license/">
            <include name="gpl.txt"/>
        </zipfileset>
      
        <zipfileset dir="bin/" prefix="triplea_${triplea.version}/bin/">
            <include name="**/*.sh"/>
	    <include name="**/*.bat"/>
	    <include name="**/*.jar"/>
        </zipfileset>
	
        <zipfileset dir="icons/" prefix="triplea_${triplea.version}/icons/">
            <include name="**/*.png"/>
	    <include name="**/*.bmp"/>
	    <include name="**/*.ico"/>
        </zipfileset>
	
        <zipfileset dir="games/" prefix="triplea_${triplea.version}/games/">
            <include name="*.xml"/>
        </zipfileset>

        <zipfileset dir="images/" prefix="triplea_${triplea.version}/images/">
            <include name="**/*.*"/>
        </zipfileset>

        <zipfileset dir="maps/" prefix="triplea_${triplea.version}/maps/">
            <include name="**/*.*"/>
        </zipfileset>
	
        <zipfileset dir="." prefix="triplea_${triplea.version}/">
            <include name="readme.html"/>
	    <include name="*.bat"/>
	    <include name="*.sh"/>
	    <include name="triplea.exe"/>
	    <include name="changelog.txt"/>
        </zipfileset>
	
        </zip>
    </target>


    <!-- zipSource -->
    <target name="zipSource" depends="init" description="create a zip file for developers">
        <mkdir dir="release" />
	
        <zip zipfile="release/triplea_source_${triplea.version}.zip" compress="true" >
        
	<zipfileset dir="src/" prefix="triplea_${triplea.version}/src/">
            <include name="**/*.java"/>
        </zipfileset>
      
        <zipfileset dir="junit/" prefix="triplea_${triplea.version}/junit/">
            <include name="excluded.properties"/>
        </zipfileset>
      
        <zipfileset dir="lib/" prefix="triplea_${triplea.version}/lib/">
            <include name="**/*.jar"/>
        </zipfileset>
      
        <zipfileset dir="data/" prefix="triplea_${triplea.version}/data/">
            <include name="**/*.dtd"/>
            <include name="**/*.gif"/>
            <include name="**/*.png"/>
	    <include name="**/*.jpg"/>
	    <include name="**/*.jpeg"/>
            <include name="**/*.txt"/>
            <include name="**/*.xml"/>
            <include name="**/*.wav"/>
	    <include name="**/*.properties"/>
        </zipfileset>
      
        <zipfileset dir="bin/" prefix="triplea_${triplea.version}/bin/">
            <include name="**/*.bat"/>
            <include name="**/*.sh"/>
        </zipfileset>
      
        <zipfileset dir="." prefix="triplea_${triplea.version}/">
            <include name="build.xml"/>
            <include name=".ant.properties"/>
            <include name="readme.html"/>
	    <include name="*.bat"/>
	    <include name="*.sh"/>
	    <include name="changelog.txt"/>
	    <include name="launch4j.config.xml"/>
        </zipfileset>
      
        <zipfileset dir="icons/" prefix="triplea_${triplea.version}/icons/">
            <include name="**/*.png"/>
	    <include name="**/*.bmp"/>
	    <include name="**/*.ico"/>
        </zipfileset>
      
        <zipfileset dir="doc/" prefix="triplea_${triplea.version}/doc/">
            <include name="**/*.html"/>
            <include name="**/*.png"/>
	    <include name="**/*.gif"/>
	    <include name="**/*.jpg"/>
        </zipfileset>
      
        <zipfileset dir="license/" prefix="triplea_${triplea.version}/license/">
            <include name="gpl.txt"/>
        </zipfileset>
      
        <zipfileset dir="images/" prefix="triplea_${triplea.version}/images/">
            <include name="**/*.*"/>
        </zipfileset>

        <zipfileset dir="maps/" prefix="triplea_${triplea.version}/maps/">
            <include name="**/*.*"/>
        </zipfileset>

        <zipfileset dir="games/" prefix="triplea_${triplea.version}/games/">
            <include name="*.xml"/>
        </zipfileset>
        
	</zip>
    </target>


    <!-- patch -->
    <!--
    	PBEM patch
    -->
    <target name="patch" depends="compile">
        <jar destfile="patch.jar" basedir="classes">
		<include name="games/strategy/**/*.class"/>
		<exclude name="**/GameRunner*.class"/>
		<exclude name="**/xml/**/*.class"/>
	</jar>
    </target>


    <!-- javadoc -->
    <target name="javadoc" depends="init" description="Generate JavaDoc documentation">
        <delete dir="apidoc"/>
        
	<mkdir dir="apidoc"/>
        
	<javadoc destdir="apidoc" Verbose="off">
	    <package name="games.strategy.*"/>
                <sourcepath>
                    <pathelement location="src/"/>
                </sourcepath>
        </javadoc>
    </target>

    <!-- installation jar -->
    <target name="installer" depends="zip" description="create installation jar and exe">
        <taskdef name="izpack" classpath="lib/standalone-compiler.jar" classname="com.izforge.izpack.ant.IzPackTask"/>

        <mkdir dir="release/triplea" />
        <mkdir dir="release/bin" />

        <copy file="installer/install.xml" tofile="release/install.xml"/>
        <copy file="installer/default_shortcut_specification.xml" tofile="release/default_shortcut_specification.xml"/>
        <copy file="installer/script.bat" tofile="release/script.bat"/>
        <copy todir="release/bin">
            <fileset dir="installer/bin"/>
        </copy> 

        <!-- Izpack does not accept ant variables, so have ant hack them -->
        <replace file="release/install.xml" token="--TRIPLEA_VERSION--" value="${triplea.version}"/>
        <replace file="release/default_shortcut_specification.xml" token="--TRIPLEA_VERSION--" value="${triplea.version}"/>

        <unzip src="release/triplea_${triplea.version}.zip" dest="release/triplea"/>
        <izpack input="release/install.xml"
                output="release/triplea-install.jar"
                installerType="standard"
                basedir="release/"
                izpackdir="release/"/>

    </target>

    <!-- installation executable - needs windows -->
    <target name="win-installer" depends="installer" description="create installation exe">
        <taskdef name="jsmoothgen" classpath="lib/jsmoothgen-ant.jar" classname="net.charabia.jsmoothgen.ant.JSmoothGen"/>
        <jsmoothgen project="installer/triplea.jsmooth" skeletonroot="installer/skeletons"/>
    </target>

    <!-- test -->
    <target name="test" depends="init,compile" description="run junit tests">
        <junit fork="yes" haltonerror="on">
            <classpath>
                <pathelement path="${junit.jar}"/>
                <pathelement path="${classpath}"/>
                <pathelement path="classes/"/>
            </classpath>

            <formatter type="plain" />
            <test name="games.strategy.triplea.delegate.DelegateTest" />
            <test name="games.strategy.engine.random.EmailValidatorTest" />
        </junit>
    </target>

</project>
